{"version":3,"sources":["../../src/utils/index.js"],"names":["useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;;;;;;AAAA;;AAEA;AACO,SAASA,aAAT,GAAyB;AAC/B;AACA;AAF+B,kBAGK,qBAAS;AAC5CC,IAAAA,KAAK,EAAEC,SADqC;AAE5CC,IAAAA,MAAM,EAAED;AAFoC,GAAT,CAHL;AAAA,MAGxBE,UAHwB;AAAA,MAGZC,aAHY;;AAQ/B,wBAAU,YAAM;AACf;AACA,aAASC,YAAT,GAAwB;AACvB;AACAD,MAAAA,aAAa,CAAC;AACbJ,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADD;AAEbL,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFF,OAAD,CAAb;AAIA,KARc,CAUf;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXe,CAaf;;AACAA,IAAAA,YAAY,GAdG,CAgBf;;AACA,WAAO;AAAA,aAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;AAAA,KAAP;AACA,GAlBD,EAkBG,EAlBH,EAR+B,CA0BvB;;AAER,SAAOF,UAAP;AACA","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// Hook from: https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n\t// Initialize state with undefined width/height so server and client renders match\n\t// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: undefined,\n\t\theight: undefined,\n\t});\n\n\tuseEffect(() => {\n\t\t// Handler to call on window resize\n\t\tfunction handleResize() {\n\t\t\t// Set window width/height to state\n\t\t\tsetWindowSize({\n\t\t\t\twidth: window.innerWidth,\n\t\t\t\theight: window.innerHeight,\n\t\t\t});\n\t\t}\n\n\t\t// Add event listener\n\t\twindow.addEventListener(\"resize\", handleResize);\n\n\t\t// Call handler right away so state gets updated with initial window size\n\t\thandleResize();\n\n\t\t// Remove event listener on cleanup\n\t\treturn () => window.removeEventListener(\"resize\", handleResize);\n\t}, []); // Empty array ensures that effect is only run on mount\n\n\treturn windowSize;\n}\n"],"file":"index.js"}